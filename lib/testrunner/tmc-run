#!/bin/bash -e
# This gets passed with each submission to tmc-sandbox

# This gets run under 'su', so we want to source profile mostly to get any special PATH.
# Sourcing seems to terminate the script with -e, even when the return status is 0.
# I have absolutely no idea why. We work around it with the '|| true'.
. /etc/profile || true

# Source user params if any.
# Though the variable names and content format here are limited,
# the contents should be treated carefully, despite us being in a sandbox.
#
# Included variables: error_msg_locale
#
if [ -r .tmcparams ]; then
  . ./.tmcparams
fi

if [ -z "$error_msg_locale" ]; then
  error_msg_locale=en
fi
ERROR_MSG_LOCALE_DEF="-Dfi.helsinki.cs.tmc.edutestutils.defaultLocale=$error_msg_locale"


TMC_MAVEN_PLUGIN_VERSION=1.5

# Identify project type
if [ -f pom.xml ]; then
  PROJECT_TYPE=java_maven
elif [ -f Makefile ]; then
  PROJECT_TYPE=makefile_c
else
  PROJECT_TYPE=java_simple
fi

JAVAC_EXE_PATH=`readlink -f \`which javac\``
MAKE_EXE_PATH=`readlink -f \`which make\``
JDK_DIR=`dirname \`dirname "$JAVAC_EXE_PATH"\``
TOOLS_JAR_PATH="$JDK_DIR/lib/tools.jar"

TOTAL_RAM_KB=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`

echo "Total RAM: ${TOTAL_RAM_KB}KB"
echo "Project type: $PROJECT_TYPE"

echo "Files in `pwd`:"
ls -laR .

# Compile project
echo "Compiling project..."
case $PROJECT_TYPE in
  java_simple)
    # An explicit memory limit below the sandbox memory limit has been found to avoid
    # the occasional OOM killer. We leave 48M to the sandbox.
    # Still, Java CAN spin in the GC for a long time if it runs out of memory.

    JAVA_RAM_KB=${JAVA_RAM_KB-`expr $TOTAL_RAM_KB - 48 \* 1024`}
    echo "Memory allocated to tests: ${JAVA_RAM_KB}KB"

    mkdir -p classes/main
    mkdir -p classes/test
    find src  -name '*.java' -print0 | xargs -0 javac -d classes/main -cp $TOOLS_JAR_PATH:lib/*:src/ > test_output.txt 2>&1 || exit 101
    find test -name '*.java' -print0 | xargs -0 javac -d classes/test -cp $TOOLS_JAR_PATH:lib/*:classes/main:test/ > test_output.txt 2>&1 || exit 102
    rm -f test_output.txt

    CLASSPATH="$TOOLS_JAR_PATH:lib/testrunner/*:lib/*:classes/main/:classes/test/"
  ;;

  java_maven)
    # Enable maven cache
    if [ -d /ubdd/maven/repository ]; then
      rm -Rf $HOME/.m2/repository
      mkdir -p $HOME/.m2
      ln -s /ubdd/maven/repository $HOME/.m2/repository
    fi

    # Sandbox: 64MB, Maven: 64MB, Java program: the rest
    JAVA_RAM_KB=${JAVA_RAM_KB-`expr $TOTAL_RAM_KB - \( 128 \* 1024 \)`}
    MAVEN_RAM_KB=${MAVEN_RAM_KB-`expr 64 \* 1024`}
    echo "Memory allocated to Maven: ${MAVEN_RAM_KB}KB"
    echo "Memory allocated to tests: ${JAVA_RAM_KB}KB"

    export MAVEN_OPTS="-Xmx${MAVEN_RAM_KB}K"

    mvn compiler:compile 2>&1 | tee test_output.txt
    [ ${PIPESTATUS[0]} -eq 0 ] || exit 101

    mvn compiler:testCompile 2>&1 | tee test_output.txt
    [ ${PIPESTATUS[0]} -eq 0 ] || exit 102

    rm -f test_output.txt
  ;;

  makefile_c)
    JAVA_RAM_KB=${JAVA_RAM_KB-`expr $TOTAL_RAM_KB - 48 \* 1024`}
    echo "Memory allocated to tests: ${JAVA_RAM_KB}KB"
    make clean
    make all

    CLASSPATH="$TOOLS_JAR_PATH:lib/testrunner/*:lib/*"
  ;;
esac


# Source .tmcrc if any
if [ -f .tmcrc ]; then
  echo "Including .tmcrc"
  . ./.tmcrc
fi

echo "Running tests..."
case $PROJECT_TYPE in
  java_simple)
    # Discover tests
    java -cp "$CLASSPATH" "fi.helsinki.cs.tmc.testscanner.TestScanner" --test-runner-format test > tests.txt 2> test_output.txt || exit 103
    rm -f test_output.txt

    TESTS=`cat tests.txt`

    # Run tests
    DEFS="
      -Dtmc.exercise_dir=`pwd`
      -Dtmc.src_class_dir=`pwd`/classes/main
      -Dtmc.test_class_dir=`pwd`/classes/test
      -Dtmc.lib_dir=`pwd`/lib
      -Dtmc.results_file=`pwd`/test_output.txt"

    if [ -d "lib/endorsed" ]; then
      DEFS="$DEFS -Djava.endorsed.dirs=`pwd`/lib/endorsed"
    fi
    echo "DEFS: $DEFS"

    java -Xms${JAVA_RAM_KB}K -Xmx${JAVA_RAM_KB}K "$ERROR_MSG_LOCALE_DEF" -cp "$CLASSPATH" $DEFS "fi.helsinki.cs.tmc.testrunner.Main" $TESTS > stdout.txt 2> stderr.txt
    ls -laghR .
    echo "done dir list"

  ;;
  java_maven)
    # MAVEN_OPTS was set above
    JVM_OPTS_DEF="-Dtmc.test.jvm_opts=-Xms"${JAVA_RAM_KB}"K -Xmx"${JAVA_RAM_KB}"K $ERROR_MSG_LOCALE_DEF"
    TEST_RUNNER="fi.helsinki.cs.tmc:tmc-maven-plugin:$TMC_MAVEN_PLUGIN_VERSION:test"

    mvn -X "$JVM_OPTS_DEF" $TEST_RUNNER 2>&1 | tee mvn_output.txt
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
      rm -f mvn_output.txt
      mv target/test_output.txt ./
      mv target/stdout.txt ./
      mv target/stderr.txt ./
    else
      mv mvn_output.txt test_output.txt
      [ -f target/stdout.txt ] && mv target/stdout.txt ./
      [ -f target/stderr.txt ] && mv target/stderr.txt ./
      exit 103
    fi
  ;;

  makefile_c)
    valgrind --log-file=valgrind.log ./test/test > stdout.txt 2> stderr.txt
    tmc-check-convert-results > test_output.txt
  ;;
esac

echo "tmc-run completed successfully"
exit 0
