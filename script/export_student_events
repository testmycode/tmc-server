#!/usr/bin/env ruby
root_dir = File.expand_path('../', File.dirname(__FILE__))
require root_dir + '/config/environment'
require 'fileutils'

if ARGV.length < 1 || ARGV.length > 2 || ARGV.any? {|a| ['-h', '--help'].include?(a) }
  puts "Usage: script/export_student_events dest_dir [course]"
  puts
  exit!(1)
end

dest_dir = ARGV[0]
course_name = ARGV[1]

def write_file(filename, data)
  File.open(filename, 'wb') {|f| f.write(data) }
end

if course_name
  events = StudentEvent.where(:course_id => Course.find_by_name!(course_name).id)
else
  events = StudentEvent
end

total = events.count

i = 1
events.find_each do |ev|
  puts "Exporting event id=#{ev.id}  (#{i}/#{total})"

  user_dir = "#{dest_dir}/#{ev.user_id}"
  FileUtils.mkdir_p(user_dir) unless File.exist?(user_dir)

  record_name = ev.happened_at.strftime("%Y-%m-%d_%H-%M-%S_#{ev.id}")
  json_file = "#{user_dir}/#{record_name}.json"

  json = {
    :user_id => ev.user_id,
    :course_name => ev.course.name,
    :exercise_name => ev.exercise_name,
    :event_type => ev.event_type,
    :happened_at => ev.happened_at.to_s,
    :metadata => ev.metadata,
    :system_nano_time => ev.system_nano_time.andand(&:to_s)
  }

  case ev.event_type
  when 'code_snapshot'
    write_file("#{user_dir}/#{record_name}.zip", ev.data)
  else
    json[:data] = ev.data
  end

  write_file(json_file, json.to_json)

  i += 1
end
